<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>php on Professional Blog</title><link>https://alister.github.io/tags/php/</link><description>Recent content in php on Professional Blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 07 Mar 2022 20:25:04 +0000</lastBuildDate><atom:link href="https://alister.github.io/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>Links to Projects</title><link>https://alister.github.io/blog/2022/03/07/links-to-projects/</link><pubDate>Mon, 07 Mar 2022 20:25:04 +0000</pubDate><guid>https://alister.github.io/blog/2022/03/07/links-to-projects/</guid><description>Occasionally, I&amp;rsquo;ll write small largely stand-alone projects. If they are static HTML &amp;amp; Javascript-based, then creating them as Github pages, available as sub-directories on this site (beyond all the existing pages here) can be a quick and easy way to show them.
However, there&amp;rsquo;s not been a good way to link to them, and show them off - so this is just the introduction to the new page in the menu above - and the link to some of my projects.</description></item><item><title>Projects</title><link>https://alister.github.io/projects/</link><pubDate>Fri, 04 Mar 2022 20:22:00 +0000</pubDate><guid>https://alister.github.io/projects/</guid><description>2001: Lets keep it simple I designed these flag options a long time ago, around the year 2001, following some discussion (and a competition) on the main moon society mailing list regarding a flag. Several were produced, but they were all very complicated. This was my idea.
Thoughts for a Luna flag. September 2019 On my second visit to An Evening Of Unnecessary Detail, Geoff Marshall (and Vicki!) were one of the guests on-stage.</description></item><item><title>PHP Gotcha: Using php://temp</title><link>https://alister.github.io/blog/2022/02/27/php-gotcha-using-php-temp/</link><pubDate>Sun, 27 Feb 2022 14:15:00 +0000</pubDate><guid>https://alister.github.io/blog/2022/02/27/php-gotcha-using-php-temp/</guid><description>Just a quicky post, that I hope will save someone (or myself) some head-scratching later.
TLDR: Whenever you fopen('php://temp', $mode) you get a new file.
I found this out when exporting some data from the DB to a spreadsheet/CSV. I was using Yectep\PhpSpreadsheetBundle\Factory (a Symfony bundle around phpoffice/phpspreadsheet) which had a handy method to save the file:
$writer = $this-&amp;gt;spreadsheetFactory-&amp;gt;createWriter($spreadsheet, &amp;#39;.csv&amp;#39;); $writer-&amp;gt;save(&amp;#39;php://temp&amp;#39;); From there I would read it back, and upload it to a cloudfiles storage account using FlySystem:</description></item></channel></rss>